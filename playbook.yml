---
- name: Install Python on target host
  hosts: aio1
  gather_facts: no
  remote_user: ansible
  become: yes  
  tasks:
    - name: Install Python
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal aptitude)
      changed_when: no
    
    - name: Removes mitigations for CVE-2017-5715 (aka Spectre / Variant 2) because of CPU hard lockups in kernel 4.4.0-116
      # https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1745349
      lineinfile:
        path: /etc/default/grub
        state: present
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="noibpb"'
      register: grub_config
    
    - name: Update GRUB
      shell: update-grub
      when: grub_config | changed
  tags:
    - openstack
    - ceph

- name: Prepare target host for Ceph and OpenStack installation
  hosts: aio1
  gather_facts: no
  remote_user: ansible
  become: yes
  tasks:
    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
      args:
        creates: /root/.ssh/id_rsa

    - name: Get contents of file id_rsa.pub
      command: cat /root/.ssh/id_rsa.pub
      register: id_rsa_pub
      changed_when: no

    - name: Set authorized key for user root to access ansible user
      authorized_key:
        user: ansible
        state: present
        key: "{{id_rsa_pub.stdout}}"
      become: no

    - name: Add Ansible repository
      apt_repository:
        repo: 'ppa:ansible/ansible'
      register: ansible_repo

    - name: Apt upgrade all
      apt:
        upgrade: yes
        update_cache: yes
    
    - name: Install dependencies
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - lvm2
        - software-properties-common
        - parted
        - iptables
        - kpartx
        - ansible

    - name: Enable and start LVM meta service
      service:
        name: lvm2-lvmetad
        state: started
        enabled: yes
  tags:
    - openstack
    - ceph

- name: Install and configure Ceph
  hosts: aio1
  remote_user: ansible
  become: yes
  vars:
    data_partition_nr: "{{ data_partition_nr_override | default(2) | int }}"
    os_partition_index: "{{ os_partition_index_override | default((data_partition_nr | int) - 2) | int }}"
  tasks:
    - name: OS device info (nvme0n1)
      parted:
        device: /dev/nvme0n1
      register: device_info

    - name: Data partition 100% (nvme0n1p{{ data_partition_nr }})
      parted:
        device: /dev/nvme0n1
        number: "{{ data_partition_nr }}"
        flags: [ lvm ]
        state: present
        part_start: "{{ part_start_value }}"
      vars:
        part_start_value: "{{ device_info.partitions[os_partition_index | int].end | int }}KiB"

    - name: Ensure volume group ceph exists
      lvg:
        vg: ceph
        pvs: "/dev/nvme0n1p{{ data_partition_nr }}"
        pesize: 32

    - name: Ensure data volume exists
      lvol:
        vg: ceph
        lv: data
        size: +100%FREE

    - name: Clone ceph-ansible
      git:
        repo: "https://github.com/ceph/ceph-ansible.git"
        dest: "/opt/ceph-ansible"
        update: yes
      register: ceph_git_repo

    - name: Ensure site.yml is a copy of site.yml.sample (ceph)
      copy:
        remote_src: yes
        src: /opt/ceph-ansible/site.yml.sample
        dest: /opt/ceph-ansible/site.yml

    - name: Create Ansible hosts file from template (ceph)
      template:
        src: files/ceph/hosts.j2
        dest: /opt/ceph-ansible/hosts

    - name: Create Ansible group_vars all.yml file (ceph)
      template:
        src: files/ceph/group_vars/all.yml.j2
        dest: /opt/ceph-ansible/group_vars/all.yml

    - name: Ensure Ceph is installed and configured
      shell: ansible-playbook --become -i /opt/ceph-ansible/hosts site.yml
      args:
        creates: /etc/ceph/ceph.conf
        chdir: /opt/ceph-ansible
      environment:
        ANSIBLE_HOST_KEY_CHECKING: False
  tags:
    - ceph

- name: Install and configure OpenStack
  hosts: aio1
  remote_user: ansible
  become: yes
  tasks:
    - name: Clone openstack-ansible
      git:
        repo: "https://git.openstack.org/openstack/openstack-ansible"
        dest: "/opt/openstack-ansible"
        version: stable/queens
        update: no
      register: os_git_repo
      tags:
        - openstack
        - openstack_config

    - name: Determine if minor upgrade of OpenStack shall be done
      block:
        - name: Retrieve stats for /opt/ansible-runtime
          stat:
            path: /opt/ansible-runtime
          register: os_ansible_path
        - name: Set fact to decide if upgrade to be done
          set_fact:
            do_upgrade: "{{ os_ansible_path.stat.isdir is defined and os_ansible_path.stat.isdir and os_git_repo | changed }}"
      tags:
        - openstack
        - openstack_config

    - name: Determine if this is a clean install of OpenStack
      block:
        - name: Retrieve stats for /etc/openstack-release
          stat:
            path: /etc/openstack-release
          register: openstack_relese_file
        - name: Set fact to decide if clean install shall be done
          set_fact:
            do_install: "{{ openstack_relese_file.stat.exists | bool == false }}"
      tags:
        - openstack
        - openstack_config

    - debug:
        msg: "do_install={{ do_install }}, do_upgrade={{ do_upgrade }}"
      tags:
        - openstack
        - openstack_config

    - name: Execute script bootstrap-ansible.sh
      shell: scripts/bootstrap-ansible.sh
      args:
        chdir: /opt/openstack-ansible
      when: (do_install | bool and not (os_ansible_path.stat.isdir is defined and os_ansible_path.stat.isdir)) or do_upgrade | bool
      tags:
        - openstack
        - openstack_config

    - name: Execute script bootstrap-aio.sh
      shell: scripts/bootstrap-aio.sh
      args:
        chdir: /opt/openstack-ansible
        creates: /etc/openstack_deploy/user_variables.yml
      environment:
        SCENARIO: "aio_lxc"
        BOOTSTRAP_OPTS: bootstrap_host_loopback_cinder=no -e bootstrap_host_loopback_swift=no -e bootstrap_host_loopback_nova=no -e bootstrap_host_ceph=no
      tags:
        - openstack
        - openstack_config

    - name: Ensure service configuration is present
      copy:
        remote_src: yes
        src: /opt/openstack-ansible/etc/openstack_deploy/conf.d/{{ item }}.yml.aio
        dest: /etc/openstack_deploy/conf.d/{{ item }}.yml
      with_items:
        - horizon
      tags:
        - openstack
        - openstack_config

    - name: Ensure service configuration is removed
      file:
        path: /etc/openstack_deploy/conf.d/{{ item }}.yml
        state: absent
      with_items:
        - heat
        - swift
        - designate
      tags:
        - openstack
        - openstack_config

    - name: Copy user_variables_neutron.yml
      copy:
        src: files/user_variables_neutron.yml
        dest: /etc/openstack_deploy/user_variables_neutron.yml
      tags:
        - openstack
        - openstack_config

    - name: Ensure debug is set to false
      replace:
        path: /etc/openstack_deploy/user_variables.yml
        regexp: 'debug: True$'
        replace: 'debug: False'
        backup: no
      tags:
        - openstack
        - openstack_config

    - name: Ensure tempest is not installed
      replace:
        path: /etc/openstack_deploy/user_variables.yml
        regexp: 'tempest_install: yes$'
        replace: 'tempest_install: no'
        backup: no
      tags:
        - openstack
        - openstack_config

    - name: Ensure tempest is not run
      replace:
        path: /etc/openstack_deploy/user_variables.yml
        regexp: 'tempest_run: yes$'
        replace: 'tempest_run: no'
        backup: no
      tags:
        - openstack
        - openstack_config

    - name: Replace user_variables_ceph.yml
      copy:
        src: files/user_variables_ceph.yml
        dest: /etc/openstack_deploy/user_variables_ceph.yml
      tags:
        - openstack
        - openstack_config

    - name: Replace cinder.yml
      copy:
        src: files/conf.d/cinder.yml
        dest: /etc/openstack_deploy/conf.d/cinder.yml
      tags:
        - openstack
        - openstack_config

    - name: Fetch admin password
      shell: cat /etc/openstack_deploy/user_secrets.yml | grep keystone_auth_admin_password
      register: cmd_admin_pass
      changed_when: false
      tags:
        - openstack
        - openstack_config

    - name: Print admin password
      debug:
        var: cmd_admin_pass.stdout
      tags:
        - openstack
        - openstack_config

    - name: Execute openstack-ansible setup-hosts.yml
      shell: openstack-ansible setup-hosts.yml
      args:
        chdir: /opt/openstack-ansible/playbooks
      when: do_upgrade | bool or do_install | bool
      tags:
        - openstack

    - name: Set extra variables for infrastructure for minor upgrade
      set_fact:
        setup_infra_extra_vars: -e rabbitmq_upgrade=true
      when: do_upgrade | bool
      tags:
        - openstack

    - name: Execute openstack-ansible setup-infrastructure.yml
      shell: openstack-ansible {{ setup_infra_extra_vars | default('') }} setup-infrastructure.yml
      args:
        chdir: /opt/openstack-ansible/playbooks
      when: do_upgrade | bool or do_install | bool
      tags:
        - openstack

    - name: Execute openstack-ansible setup-openstack.yml
      shell: openstack-ansible setup-openstack.yml
      args:
        chdir: /opt/openstack-ansible/playbooks
      when: do_upgrade | bool or do_install | bool
      tags:
        - openstack

    - name: Create public network
      shell: ". /root/openrc && \
        openstack network list -f value -c Name | grep 'public' || \
        (openstack network create public --external --provider-network-type flat --provider-physical-network flat --project admin && echo 'created')"
      register: shell_net
      changed_when: shell_net.stdout_lines | last == 'created'
      tags:
        - openstack
        - openstack_post_config

    - name: Create subnet in public network
      shell: ". /root/openrc && \
        openstack subnet list -f value -c Name | grep 'public-subnet' || \
        (openstack subnet create public-subnet --network public --subnet-range 172.29.248.0/22 --no-dhcp --allocation-pool start=172.29.249.110,end=172.29.249.200 --gateway 172.29.248.100 && echo 'created')"
      register: shell_subnet
      changed_when: shell_subnet.stdout_lines | last == 'created'
      tags:
        - openstack
        - openstack_post_config

    - name: Create test project
      shell: ". /root/openrc && \
        openstack project list -f value -c Name | grep 'test' || \
        (openstack project create test && echo 'created')"
      register: shell_project
      changed_when: shell_project.stdout_lines | last == 'created'
      tags:
        - openstack
        - openstack_post_config

    - name: Create test user
      shell: ". /root/openrc && \
        openstack user list -f value -c Name | grep 'test' || \
        (openstack user create --password test --description 'Test User' test && echo 'created')"
      register: shell_user
      changed_when: shell_user.stdout_lines | last == 'created'
      tags:
        - openstack
        - openstack_post_config

    - name: Assign test user access rights to test project
      shell: ". /root/openrc && \
        openstack role assignment list --user test --names -c Role -f value | grep '_member_' || \
        (openstack role add --user test --project test _member_ && echo 'added')"
      register: shell_member
      changed_when: shell_member.stdout_lines | last == 'added'
      tags:
        - openstack
        - openstack_post_config

    - name: Create flavors
      shell: ". /root/openrc && \
        openstack flavor list -f value -c Name | grep '{{ item.name }}' || \
        ({{ item.cmd }} && echo 'created')"
      register: shell_flavor
      changed_when: shell_flavor.stdout_lines | last == 'created'
      with_items:
        - name: "m1.tiny"
          cmd: "openstack flavor create --vcpus 1 --disk 1 --ram 512 m1.tiny"
        - name: "m1.small"
          cmd: "openstack flavor create --vcpus 1 --disk 20 --ram 2048 m1.small"
        - name: "m1.medium"
          cmd: "openstack flavor create --vcpus 2 --disk 40 --ram 4096 m1.medium"
        - name: "m1.large"
          cmd: "openstack flavor create --vcpus 4 --disk 80 --ram 8192 m1.large"
        - name: "m1.xlarge"
          cmd: "openstack flavor create --vcpus 8 --disk 160 --ram 16384 m1.xlarge"
      tags:
        - openstack
        - openstack_post_config

    - name: Download OS images
      get_url:
        url: "{{ item.url }}"
        dest: "~/{{ item.dest_filename }}"
      with_items:
        - url: http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img
          dest_filename: cirros-0.4.0-x86_64-disk.img
        - url: https://cloud-images.ubuntu.com/artful/current/artful-server-cloudimg-amd64.img
          dest_filename: artful-server-cloudimg-amd64.img
      tags:
        - openstack
        - openstack_post_config

    - name: Convert qcow2 images to raw
      shell: "qemu-img convert -f qcow2 -O raw {{ item }}.img {{ item }}.raw"
      args:
        creates: "~/{{ item }}.raw"
        chdir: ~/
      with_items:
        - cirros-0.4.0-x86_64-disk
        - artful-server-cloudimg-amd64
      tags:
        - openstack        
        - openstack_post_config

    - name: Upload image
      shell: ". /root/openrc && \
        openstack image list -f value -c Name | grep '{{ item }}' || \
        (openstack image create --file ~/{{ item }}.raw --disk-format raw --container-format bare --public {{ item }} && echo 'created')"
      register: shell_upload
      changed_when: shell_upload.stdout_lines | last == 'created'
      with_items:
        - cirros-0.4.0-x86_64-disk
        - artful-server-cloudimg-amd64
      tags:
        - openstack        
        - openstack_post_config
      