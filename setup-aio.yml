---
- name: Install and configure OpenStack
  hosts: aio1
  remote_user: ansible
  become: yes
  tasks:
    - name: Clone openstack-ansible
      git:
        repo: "https://git.openstack.org/openstack/openstack-ansible"
        dest: "/opt/openstack-ansible"
        # Release: Queens
        version: 17.0.7
        update: yes
      register: _os_git_repo
      tags:
        - openstack_config

    - name: Determine if minor upgrade of OpenStack shall be done
      block:
        - name: Retrieve stats for /opt/ansible-runtime
          stat:
            path: /opt/ansible-runtime
          register: _os_ansible_path
        - name: Set fact to decide if upgrade to be done
          set_fact:
            _do_upgrade: "{{ (_os_ansible_path.stat.isdir is defined and _os_ansible_path.stat.isdir and _os_git_repo is changed) or (force_aio_upgrade | default(false)) | bool }}"
      tags:
        - openstack_config

    - name: Determine if this is a clean install of OpenStack
      block:
        - name: Retrieve stats for /etc/openstack-release
          stat:
            path: /etc/openstack-release
          register: _openstack_relese_file
        - name: Set fact to decide if clean install shall be done
          set_fact:
            _do_install: "{{ (_openstack_relese_file.stat.exists | bool == false) or ((force_aio_install | default(false)) | bool) }}"
      tags:
        - openstack_config

    - debug:
        msg: "_do_install={{ _do_install }}, _do_upgrade={{ _do_upgrade }}"
      tags:
        - openstack_config

    - name: Execute script bootstrap-ansible.sh
      shell: scripts/bootstrap-ansible.sh
      args:
        chdir: /opt/openstack-ansible
      when: (_do_install | bool and not (_os_ansible_path.stat.isdir is defined and _os_ansible_path.stat.isdir)) or _do_upgrade | bool
      tags:
        - openstack_config

    - name: Execute script bootstrap-aio.sh
      shell: scripts/bootstrap-aio.sh
      args:
        chdir: /opt/openstack-ansible
        creates: /etc/openstack_deploy/user_variables.yml
      environment:
        SCENARIO: "aio_lxc"
        BOOTSTRAP_OPTS: bootstrap_host_loopback_cinder=no -e bootstrap_host_loopback_swift=no -e bootstrap_host_loopback_nova=no -e bootstrap_host_ceph=no
      tags:
        - openstack_config

    - name: Ensure service configuration is present
      copy:
        remote_src: yes
        src: /opt/openstack-ansible/etc/openstack_deploy/conf.d/{{ item }}.yml.aio
        dest: /etc/openstack_deploy/conf.d/{{ item }}.yml
      with_items:
        - horizon
      tags:
        - openstack_config

    - name: Ensure service configuration is removed
      file:
        path: /etc/openstack_deploy/conf.d/{{ item }}.yml
        state: absent
      with_items:
        - heat
        - swift
        - designate
      tags:
        - openstack_config

    - name: Copy user variables files
      copy:
        src: files/{{ item }}
        dest: /etc/openstack_deploy/{{ item }}
      with_items:
        - user_variables_neutron.yml
        - user_variables_other.yml
      tags:
        - openstack_config

    - name: Ensure debug is set to false
      replace:
        path: /etc/openstack_deploy/user_variables.yml
        regexp: 'debug: True$'
        replace: 'debug: False'
        backup: no
      tags:
        - openstack_config

    - name: Ensure tempest is not installed
      replace:
        path: /etc/openstack_deploy/user_variables.yml
        regexp: 'tempest_install: yes$'
        replace: 'tempest_install: no'
        backup: no
      tags:
        - openstack_config

    - name: Ensure tempest is not run
      replace:
        path: /etc/openstack_deploy/user_variables.yml
        regexp: 'tempest_run: yes$'
        replace: 'tempest_run: no'
        backup: no
      tags:
        - openstack_config

    - name: Replace user_variables_ceph.yml
      copy:
        src: files/user_variables_ceph.yml
        dest: /etc/openstack_deploy/user_variables_ceph.yml
      tags:
        - openstack_config

    - name: Replace cinder.yml
      copy:
        src: files/conf.d/cinder.yml
        dest: /etc/openstack_deploy/conf.d/cinder.yml
      tags:
        - openstack_config

    - name: Fetch admin password
      shell: cat /etc/openstack_deploy/user_secrets.yml | grep keystone_auth_admin_password
      register: _cmd_admin_pass
      changed_when: false
      tags:
        - openstack_config

    - name: Print admin password
      debug:
        var: _cmd_admin_pass.stdout
      tags:
        - openstack_config

    - name: Execute openstack-ansible setup-hosts.yml
      shell: openstack-ansible setup-hosts.yml
      args:
        chdir: /opt/openstack-ansible/playbooks
      when: _do_upgrade | bool or _do_install | bool

    - name: Set extra variables for infrastructure for minor upgrade
      set_fact:
        setup_infra_extra_vars: -e rabbitmq_upgrade=true
      when: _do_upgrade | bool

    - name: Execute openstack-ansible setup-infrastructure.yml
      shell: openstack-ansible {{ setup_infra_extra_vars | default('') }} setup-infrastructure.yml
      args:
        chdir: /opt/openstack-ansible/playbooks
      when: _do_upgrade | bool or _do_install | bool

    - name: Execute openstack-ansible setup-openstack.yml
      shell: openstack-ansible setup-openstack.yml
      args:
        chdir: /opt/openstack-ansible/playbooks
      when: _do_upgrade | bool or _do_install | bool
